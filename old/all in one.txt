// const G = 0.0005;
// const debug = true;
//
// let sunStartDistends;
// let planetStartDistends;
// let planetStartVelocity = 3;
//
// let trails;
// let bgSF;
//
// window.wallpaperPropertyListener = {
//     applyUserProperties: function (properties) {
//         if (properties.trails) {
//             trails = properties.trails.value
//         }
//         if (properties.bgsf) {
//             bgSF = properties.bgsf.value
//         }
//     }
// }
//
// let background = {};
// let celestialBodys = [];
//
// let timing = 0;
//
// function startGame() {
//     game.start();
//
//     background = new Background(250);
//
//     celestialBodys.push(new Sun(game.canvas.width / 2, game.canvas.height / 2, 25, new Color(255, 175, 0)));
//     celestialBodys.push(new Planet(game.canvas.width / 2, game.canvas.height / 2 + planetStartDistends, -planetStartVelocity, 0, 10, new Color(255, 0, 0)));
//     // celestialBodys.push(new Planet(game.canvas.width / 2 + planetStartDistends, game.canvas.height / 2, 0, planetStartVelocity, 10, new Color(0, 255, 0)));
//     // celestialBodys.push(new Planet(game.canvas.width / 2, game.canvas.height / 2 - planetStartDistends, planetStartVelocity, 0, 10, new Color(0, 0, 255)));
//     // celestialBodys.push(new Planet(game.canvas.width / 2 - planetStartDistends, game.canvas.height / 2, 0, -planetStartVelocity, 10, new Color(255, 0, 255)));
// }
//
// function addCelestialBody (body) {
//     celestialBodys.push(body);
//     body.setId(celestialBodys.indexOf(body));
// }
// function removeCelestialBody (body) {
//     celestialBodys.splice(celestialBodys.indexOf(body) , 1);
// }
//
// function update() {
//     if (debug) {
//         trails = true;
//         bgSF = true;
//     }
//     else {
//         window.wallpaperPropertyListener = {
//             applyUserProperties: function (properties) {
//                 if (properties.trails) {
//                     trails = properties.trails.value
//                 }
//                 if (properties.bgsf) {
//                     bgSF = properties.bgsf.value
//                 }
//             }
//         }
//     }
//     background.update();
//     celestialBodys.forEach((object) => { object.updateVelocity(); });
//     celestialBodys.forEach((object) => { object.update(); });
//
//     game.clear();
//     background.draw();
//     celestialBodys.forEach((object) => { object.draw(); });
//
//     timing++;
//     if (timing >= 1001) {
//         timing = 0;
//     }
// }
//
// let game = {
//     canvas: document.createElement("canvas"),
//     start: function () {
//         this.canvas.width = document.getElementById("game").clientWidth;
//         this.canvas.height = document.getElementById("game").clientHeight;
//
//         planetStartDistends = this.canvas.height / 3;
//         sunStartDistends = this.canvas.width / 4;
//
//         this.ctx = this.canvas.getContext("2d");
//         document.body.insertBefore(this.canvas, document.getElementById("game").childNodes[0]);
//         this.interval = setInterval(update, 1000 / 60);
//     },
//     clear: function () {
//         this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
//     },
//     stop: function () {
//         clearInterval(this.interval);
//     }
// }
//
// function getRandomPosition() {
//     let x = game.canvas.width * Math.random();
//     let y = game.canvas.height * Math.random();
//     return { x, y };
// }
//
// class Color {
//     colorFix = false
//     r;
//     g;
//     b;
//     a;
//     constructor(r, g, b, a = 1) {
//         this.r = r;
//         this.g = g;
//         this.b = b;
//         this.a = a;
//     }
//
//     mix(color) {
//         if (!this.colorFix) {
//             this.r = (this.r + color.r) / 2;
//             this.g = (this.g + color.g) / 2;
//             this.b = (this.b + color.b) / 2;
//         }
//     }
//     getColorString() {
//         return "rgba(" + this.r + ", " + this.g + ", " + this.b + ", " + this.a + ")";
//     }
//     getColorValues() {
//         return {r: this.r, g: this.g, b: this.b, a: this.a}
//     }
//     setColor(r, g, b, a = 100) {
//         this.r = r;
//         this.g = g;
//         this.b = b;
//         this.a = a;
//     }
//     setAlpha(a) {
//         this.a = a;
//     }
// }
//
// class Object_AbstractClass {
//
//     constructor(x, y, color, borderColor = color) {
//         this.x = x;
//         this.y = y;
//         this.color = color;
//         this.borderColor = borderColor;
//     }
//
//     update() {
//
//     }
//     draw(size) {
//         game.ctx.strokeStyle = this.borderColor.getColorString();
//         game.ctx.beginPath();
//         game.ctx.arc(this.x, this.y, size, 0, 2 * Math.PI);
//         game.ctx.stroke();
//         game.ctx.fillStyle = this.color.getColorString();
//         game.ctx.fill();
//     }
// }
//
// class Background {
//
//     constructor(number) {
//         this.backgroundObjects = [];
//         for (let i = 0; i < number; i++) {
//             let ranPos = getRandomPosition();
//             this.backgroundObjects.push(new BackgroundStar(ranPos.x, ranPos.y, new Color(255, 255, 255)));
//         }
//     }
//
//     update() {
//         this.backgroundObjects.forEach(object => object.update());
//     }
//     draw() {
//         this.backgroundObjects.forEach(object => object.draw());
//     }
// }
//
// class Trail extends Object_AbstractClass  {
//
//     constructor(size, color, length) {
//         let colorVal = color.getColorValues();
//         super(0, 0, new Color(colorVal.r, colorVal.g, colorVal.b));
//         this.length = length;
//         this.size = size;
//         this.altPoss = [];
//     }
//
//     update(x, y) {
//         this.addPos(x, y);
//         if (this.altPoss.length > this.length) {
//             this.altPoss.splice(0, this.altPoss.length - this.length);
//         }
//     }
//
//     draw() {
//         for (let i = this.altPoss.length - 1; i >= 0; i--) {
//             this.x = this.altPoss[i].x;
//             this.y = this.altPoss[i].y;
//             this.color.setAlpha((1 / this.length) * i);
//             this.borderColor.setAlpha((1 / this.length) * i);
//             super.draw(this.size);
//         }
//     }
//
//     addPos(x, y) {
//         this.altPoss.push({ x: x, y: y });
//     }
//
//     clear () {
//         this.altPoss = [];
//     }
//
// }
//
// class BackgroundStar extends Object_AbstractClass  {
//
//     constructor(x, y, color) {
//         super(x, y, color);
//         this.speed = Math.random();
//     }
//
//     update() {
//         this.x -= this.speed;
//         if (this.x <= 0) {
//             this.x += game.canvas.width - 1;
//         }
//     }
//     draw() {
//         if ((timing % Math.floor(Math.random() * 20) === 0) && bgSF === true) {
//             super.draw(0);
//         }
//         else {
//             super.draw(1);
//         }
//     }
// }
//
// class CelestialBody extends Object_AbstractClass  {
//
//     constructor(x, y, velocityX, velocityY, size, color) {
//         super(x, y, color);
//         this.id;
//         this.velocityX = velocityX;
//         this.velocityY = velocityY;
//         this.accelerationX = 0;
//         this.accelerationY = 0;
//         this.size = size;
//         this.mass = (1 / 0.8) * Math.pow(size, 3);
//         this.parent = {};
//         this.children = [];
//     }
//
//     setId (id) {
//         this.id = id;
//     }
//     setParent (id) {
//         this.parent = id;
//     }
//     addChild (id) {
//         this.children.push(id);
//     }
//     removeChild (id) {
//         this.children.splice(this.children.indexOf(id), 1);
//     }
//
//     update() {
//         super.update();
//     }
//     draw() {
//         super.draw(this.size);
//     }
//     destroy() {
//         celestialBodys[this.parent].removeChild(this.id);
//         removeCelestialBody(this);
//     }
//
//     updateVelocity() {
//         celestialBodys.forEach((object) => {
//             if (object !== this) {
//                 let deltaX = object.x - this.x;
//                 let deltaY = object.y - this.y;
//                 let distance = Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));
//                 let force = G * ((this.mass * object.mass) / distance);
//                 let direction = Math.atan2(deltaY, deltaX);
//                 this.accelerationX = force * Math.cos(direction) / this.mass;
//                 this.accelerationY = force * Math.sin(direction) / this.mass;
//                 this.velocityX += this.accelerationX;
//                 this.velocityY += this.accelerationY;
//             }
//         });
//     }
//     updatePosition() {
//         this.x += this.velocityX;
//         this.y += this.velocityY;
//     }
//     checkBorder() {
//         if (this.y < 0 + this.size || this.y > game.canvas.height - this.size) {
//             this.velocityY = -this.velocityY;
//         }
//         if (this.x < 0 + this.size || this.x > game.canvas.width - this.size) {
//             this.velocityX = -this.velocityX;
//         }
//     }
//     checkCollision() {
//         celestialBodys.forEach((object) => {
//             if (object !== this) {
//                 let deltaX = object.x - this.x;
//                 let deltaY = object.y - this.y;
//                 let distance = Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));
//                 if (distance < this.size + object.size) {
//                     if (this.mass >= object.mass) {
//                         this.mass += object.mass;
//                         this.size = Math.cbrt(this.mass) * 0.8;
//                         this.color.mix(object.color);
//                         object.destroy();
//                     }
//                     else {
//                         object.mass += this.mass;
//                         object.size = Math.cbrt(object.mass) * 0.8;
//                         object.color.mix(this.color);
//                         this.destroy();
//                     }
//                 }
//             }
//         });
//     }
//     checkMass() {
//         if (this.mass >= 100000) {
//             this.color.setColor(0, 0, 0);
//             this.borderColor.setColor(255, 200, 50);
//             this.color.colorFix = true;
//             this.size = 20;
//         }
//     }
// }
//
// class Planet extends CelestialBody {
//
//     constructor(x, y, velocityX, velocityY, size, color) {
//         super(x, y, velocityX, velocityY, size, color);
//         this.trail = new Trail(this.size, this.color, 50);
//     }
//
//     update() {
//         this.updatePosition();
//         this.checkCollision();
//         this.checkBorder();
//         this.checkMass();
//         if (trails === true) {
//             this.trail.update(this.x, this.y);
//         }
//         else {
//             this.trail.clear();
//         }
//     }
//     draw() {
//         if (trails === true) {
//             this.trail.draw();
//         }
//         super.draw();
//     }
// }
//
// class Sun extends CelestialBody {
//
//     constructor(x, y, size, color) {
//         super(x, y, 0, 0, size, color);
//     }
//
//     update() {
//         super.update()
//     }
//     draw() {
//         super.draw();
//     }
// }